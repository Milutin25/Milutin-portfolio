{"ast":null,"code":"var _jsxFileName = \"/Users/stefanovicfamily/Desktop/milutin-portfolio/src/components/blog/index.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { LeftPart } from '../home';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostThumbnail = ({\n  post\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"a\", {\n    href: post.url,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    className: \"list_inner\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: post.cover_image,\n      alt: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }, this);\n};\n_c = PostThumbnail;\nexport const Blog = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await fetch(\"https://dev.to/api/articles?username=milutin_stefanovic_813404&per_page=3\");\n        const json = await response.json();\n        setPosts(json);\n        setLoading(false);\n      } catch (error) {\n        setError(\"Failed to fetch posts.\");\n      }\n    };\n    fetchPosts();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(LeftPart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"service\",\n      className: \"kioto_tm_section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kioto_tm_service\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kioto_tm_title\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"// My Blogs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"services_list\",\n          children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list_inner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Blog, \"FFSFm1bVdM1s2gLh8ffGbsIvlRY=\");\n_c2 = Blog;\nvar _c, _c2;\n$RefreshReg$(_c, \"PostThumbnail\");\n$RefreshReg$(_c2, \"Blog\");","map":{"version":3,"names":["useEffect","useState","LeftPart","jsxDEV","_jsxDEV","Fragment","_Fragment","PostThumbnail","post","href","url","target","rel","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","src","cover_image","alt","_c","Blog","_s","posts","setPosts","loading","setLoading","error","setError","fetchPosts","response","fetch","json","id","map","_c2","$RefreshReg$"],"sources":["/Users/stefanovicfamily/Desktop/milutin-portfolio/src/components/blog/index.tsx"],"sourcesContent":["import { useEffect, useState, FC } from 'react';\nimport { LeftPart } from '../home';\n\n\n\ninterface Post {\n  id: number;\n  title: string;\n  cover_image: string;\n  url: string;\n}\nconst PostThumbnail: FC <{post : Post}>  = ({post}) => {\n    return(\n      <a href={post.url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"list_inner\">\n        <p>{post.title}</p>\n        <img src={post.cover_image} alt={post.title}/>\n      </a>\n    )\n}\n\n\nexport const Blog: FC = () => {\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await fetch(\n          \"https://dev.to/api/articles?username=milutin_stefanovic_813404&per_page=3\"\n        );\n        const json = await response.json();\n        setPosts(json);\n        setLoading(false);\n      } catch (error) {\n        setError(\"Failed to fetch posts.\");\n\n      }\n    };\n\n    fetchPosts();\n  }, []);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>{error}</p>;\n\n  return (\n    <>\n      <LeftPart />\n\n      <div id=\"service\" className=\"kioto_tm_section\">\n        <div className=\"container\"></div>\n        <div className=\"kioto_tm_service\">\n          <div className=\"kioto_tm_title\">\n            <span>// My Blogs</span>\n          </div>\n          <div className=\"services_list\">\n              {posts.map((post) => (\n                  <li> \n                    <div className=\"list_inner\">\n                    \n                    </div>\n                  </li>\n\n              ))}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}